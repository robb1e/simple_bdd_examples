{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-26466641-1","name":"Jerkin-examples","tagline":"","body":"# Jerkin::Examples\r\n\r\nThis is an example of how to use the Jerkin library alongside mixing in modules depending on the type of test being run.\r\n\r\nIt's test framework agnostic, but here this is using RSpec. The strings sent to the methods 'Given', 'When', 'Then' and 'And' are translated into a method which is called in the current scope. \r\n\r\n    it \"has this amazing new feature\" do\r\n      Given \"Some state in the application\"\r\n      When \"this state transition is applied\"\r\n      Then \"this side affect occurs\"\r\n    end\r\n    \r\nIn the RSpec config, modules are loaded depending on what tags are on the example.  Here different tags are applied to the same test, effectively duplicating the test but with different tags applied each time.\r\n\r\n\t[:integration, :journey].each do |type|\r\n  \t  describe \"Example\", group: type do\r\n    \tit \"has this amazing new feature\" do\r\n   \t\t  Given \"Some state in the application\"\r\n\t\t  When \"this state transition is applied\"\r\n\t\t  Then \"this side affect occurs\"\r\n    \tend\r\n  \t  end\r\n\tend\r\n\t\r\nThen the configuration loads different helper modules depending on the tags.\r\n\r\n    require 'jerkin'\r\n\trequire 'journey_helpers'\r\n\trequire 'integration_helpers'\r\n\r\n\tRSpec.configure do |config|\r\n  \t  config.include Jerkin\r\n  \t  config.include JourneyHelpers, group: :journey\r\n  \t  config.include IntegrationHelpers, group: :integration\r\n\tend\r\n\r\nThen the JourneyHelpers and IntegrationHelpers modules have the methods that each tag requires such as:\r\n\r\n\tmodule IntegrationHelpers\r\n  \t  def some_state_in_the_application\r\n  \t  end\r\n  \t  \r\n\t  def this_state_transition_is_applied\r\n\t  end\r\n\r\n  \t  def this_side_affect_occurs\r\n  \t  end\r\n\tend\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n"}